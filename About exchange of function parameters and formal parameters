#include<stdio.h>
void swap(int x, int y)
{
	int temp;
	printf("形参交换前：x=%d;y=%d\n", x, y);
	temp = x;
	x = y;
	y = temp;
	printf("形参交换后：x=%d;y=%d\n", x, y);
}
int main()
{
	int m = 5, n = 2;
	printf("实参交换前：m=%d;n=%d\n", m, n);
	swap(m, n);
	printf("实参交换后：m=%d;n=%d\n", m, n);
	return 0;
}
/*
实参交换前：m=5;n=2
形参交换前：x=5;y=2
形参交换后：x=2;y=5
实参交换后：m=5;n=2
*/
/*
（1）调用swap函数时，为形参x和y在内存中临时分配储存单元。
（2）将实参m和n的值分别传递给对应的形参x和y，此时实参m和n在定义时已分配储存单元。
（3）在执行swap函数期间，由于形参x和y已经有值，可以进行交换操作。
（4）调用结束，形参x和y的储存单元被释放，而实参m和n的储存单元仍保留着并维持原值。
实参  m 3     5 n
       ⬇️      ⬇️
形参  x 3     5 y
这种传递方式是单向的值传递，对形参的操作不会影响到实参的值。
*/
